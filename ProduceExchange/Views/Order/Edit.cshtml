@using ProduceExchange.Controllers
@using ProduceExchange.Models
@model ProduceExchange.Models.OrderModels

@{
    ViewBag.Title = "Edit";
    ApplicationDbContext db = new ApplicationDbContext();
    InventoryController inv = new InventoryController();
    OrderController ord = new OrderController();
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit","Order"))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Orders</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.orderClient, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.orderClient, ord.getClientDropDown(),"Select Client", new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.orderClient, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.orderType, htmlAttributes: new {  @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.orderType, ord.getProductTypeDropDown(),"Storage Type", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.orderType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.orderCategory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.orderCategory, ord.getProductCategoryDropDown(), "Select Product Type", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.orderCategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.orderVariety, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.orderVariety, ord.getVarietyDropDown(), "Product Variety", new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.orderVariety, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.orderQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.orderQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.orderQuantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.orderDollars, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.orderDollars, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.orderDollars, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.orderDueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.orderDueDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.orderDueDate, "", new { @class = "text-danger" })
            </div>
            <asp:Calendar ID="Calendar1" runat="server SelectionMode="DayWeekMonth" onselectionchanged="Calendar1_SelectionChanged">
            </asp:Calendar>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.orderComment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.orderComment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.orderComment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.orderStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.orderStatus, new SelectList(new List<Object>
                       {
                       new { value = 0 , text = "Complete" },
                       new { value = 1 , text = "Pending"  }
                       }, "value", "text", 2), "Order Status", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.orderStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
